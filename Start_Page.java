
import java.io.File;
import javax.swing.JFileChooser;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author mumei
 */
public class Start_Page extends javax.swing.JFrame {

    /**
     * Creates new form Start_Page
     */
    public Start_Page() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DriveDetect = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        DriveDetect.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        DriveDetect.setForeground(new java.awt.Color(214, 196, 196));
        DriveDetect.setText("NO FLASH DRIVE FOUND");
        getContentPane().add(DriveDetect);
        DriveDetect.setBounds(10, 20, 190, 17);

        setSize(new java.awt.Dimension(453, 422));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Start_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Start_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Start_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Start_Page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Start_Page().setVisible(true);
            }
        });
        Start_Page Start = new Start_Page();
        Start.NewMain();
            
    }
    
    public void NewMain(){
    
           String[] letters = new String[]{ "A", "B", "C", "D", "E", "F", "G", "H", "I"};
    File[] drives = new File[letters.length];
    boolean[] isDrive = new boolean[letters.length];

    // init the file objects and the initial drive state
    for ( int i = 0; i < letters.length; ++i )
        {
        drives[i] = new File(letters[i]+":/");

        isDrive[i] = drives[i].canRead();
        }

     System.out.println("FindDrive: waiting for devices...");

     // loop indefinitely
     while(true)
        {
        // check each drive 
        for ( int i = 0; i < letters.length; ++i )
            {
            boolean pluggedIn = drives[i].canRead();

            // if the state has changed output a message
            if ( pluggedIn != isDrive[i] )
                {
                if ( pluggedIn ){
                DriveDetect.setText("DRIVE " + letters[i] + " HAS BEEN PLUGGED IN");
                        FileChooser(letters, i);
                }
                
                else{
                        DriveDetect.setText("DRIVE " +letters[i]+ " HAS BEEN UNPLUGGED");
                isDrive[i] = pluggedIn;
                }
                }
            }

        // wait before looping
        try { Thread.sleep(100); }
        catch (InterruptedException e) { /* do nothing */ }

        }
     
        
    }
    
public void FileChooser(String[] DriveLet, int index){
        JFileChooser fc = new JFileChooser(DriveLet[index] + ":");
        int option = fc.showOpenDialog(Start_Page.this);    
//        
//    if(option == JFileChooser.APPROVE_OPTION) {
//    File selectedFile = fc.getSelectedFile();
//    DriveDetect.setText(selectedFile.getAbsolutePath());
//}
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JLabel DriveDetect;
    // End of variables declaration//GEN-END:variables


}



